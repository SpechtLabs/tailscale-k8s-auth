<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="200mm"
   height="200mm"
   viewBox="0 0 200 200"
   version="1.1"
   id="svg1"
   xml:space="preserve"
   inkscape:export-filename="specht-labs.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   inkscape:version="1.4 (e7c3feb1, 2024-10-09)"
   sodipodi:docname="SpechtLabsLogo.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="0.64324784"
     inkscape:cx="401.86688"
     inkscape:cy="457.05556"
     inkscape:window-width="1744"
     inkscape:window-height="1097"
     inkscape:window-x="58"
     inkscape:window-y="44"
     inkscape:window-maximized="0"
     inkscape:current-layer="layer1"
     showgrid="true"
     inkscape:export-bgcolor="#ffffff00"><inkscape:grid
       id="grid48"
       units="mm"
       originx="0"
       originy="0"
       spacingx="1"
       spacingy="0.99999998"
       empcolor="#0099e5"
       empopacity="0.30196078"
       color="#0099e5"
       opacity="0.14901961"
       empspacing="18"
       enabled="true"
       visible="true" /></sodipodi:namedview><defs
     id="defs1"><rect
       x="37.309737"
       y="547.92013"
       width="262.23415"
       height="158.83288"
       id="rect70" /><linearGradient
       id="swatch29"
       inkscape:swatch="solid"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop29" /></linearGradient><meshgradient
       inkscape:collect="always"
       id="meshgradient45"
       gradientUnits="userSpaceOnUse"
       x="0"
       y="5.4469773e-08"
       gradientTransform="scale(0.95238096)"><meshrow
         id="meshrow58"><meshpatch
           id="meshpatch58"><stop
             path="c 70,0  140,0  210,0"
             style="stop-color:#008080;stop-opacity:1"
             id="stop58" /><stop
             path="c 0,70  0,140  0,210"
             style="stop-color:#00a2a2;stop-opacity:1"
             id="stop59" /><stop
             path="c -70,0  -140,0  -210,0"
             style="stop-color:#2862b8;stop-opacity:1"
             id="stop60" /><stop
             path="c 4.0492e-06,-69.6643  0,-140  0,-210"
             style="stop-color:#0a192f;stop-opacity:1"
             id="stop61" /></meshpatch></meshrow></meshgradient><inkscape:path-effect
       effect="fill_between_many"
       method="originald"
       linkedpaths="#path48,0,1"
       id="path-effect49"
       is_visible="true"
       lpeversion="0"
       join="true"
       close="true"
       autoreverse="true" /><rect
       x="37.309738"
       y="547.9201"
       width="262.23416"
       height="158.83289"
       id="rect70-4" /></defs><g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"
     style="display:inline"><rect
       style="fill:url(#meshgradient45);fill-opacity:1;fill-rule:evenodd;stroke-width:0.361904;stroke-dasharray:none"
       id="rect2"
       width="200"
       height="200"
       x="0"
       y="5.4469773e-08"
       inkscape:label="rect2" /></g><g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="g49"
     style="display:inline"><path
       inkscape:original-d="M 0,0"
       inkscape:path-effect="#path-effect49"
       d="m 166.62848,193.96615 c -1.03946,-0.73948 -2.45581,-1.744 -3.14743,-2.23227 -1.95943,-1.3833 -3.75956,-3.12663 -4.4023,-4.26337 -1.2142,-2.1474 -2.38097,-3.84709 -2.64088,-3.84709 -0.14801,0 -0.42712,0.33137 -0.62026,0.73638 -0.19313,0.40501 -0.7063,0.92765 -1.14038,1.16141 -0.69501,0.37428 -0.87518,0.38941 -1.50942,0.1267 -1.58957,-0.65842 -4.06959,-3.67216 -4.85598,-5.90102 -0.421,-1.19325 -0.72382,-1.51596 -2.78251,-2.96534 -0.93111,-0.65553 -2.57246,-2.01794 -3.64744,-3.02758 -2.17463,-2.04244 -2.67603,-2.89549 -3.81328,-6.48759 -0.3805,-1.20186 -0.94201,-2.77532 -1.24779,-3.49658 -0.3058,-0.72127 -0.64848,-1.63152 -0.76152,-2.02279 -0.27094,-0.93778 -1.12263,-6.31732 -1.92012,-12.12792 l -0.64147,-4.6739 -0.89901,-0.53051 c -1.09268,-0.64479 -11.42853,-11.05654 -12.4227,-12.51391 -0.8041,-1.17873 -1.05757,-1.31937 -2.3778,-1.31937 -1.31042,0 -4.04751,-0.79605 -5.62133,-1.63489 -0.78274,-0.4172 -1.7787,-1.22412 -2.44456,-1.98058 -1.66924,-1.89635 -2.52391,-2.30412 -4.51409,-2.15369 -2.50864,0.18963 -3.55032,0.46467 -4.67962,1.23562 -0.574192,0.39199 -1.200352,0.71271 -1.391452,0.71271 -0.67059,0 -0.6217,0.4636 0.1431,1.3571 1.167402,1.36384 2.032372,4.33723 1.594032,5.47952 -0.30544,0.79596 -1.919852,0.11813 -4.471112,-1.87726 -1.10358,-0.86311 -1.44486,-1.00777 -2.54752,-1.07974 -0.70028,-0.0457 -1.82951,-0.0191 -2.50938,0.0591 -1.13838,0.13098 -1.33426,0.24442 -2.47654,1.43435 -0.68222,0.71067 -1.59247,1.94166 -2.02279,2.73554 -0.65359,1.20579 -0.8009,1.73945 -0.89478,3.24146 -0.0992,1.58655 -0.16525,1.80441 -0.56188,1.85227 -1.39171,0.16788 -3.00081,-3.13445 -3.03805,-6.23498 l -0.0149,-1.23614 -0.80596,0.89901 c -1.158953,1.29277 -2.231424,3.01723 -2.561373,4.11851 -0.220033,0.73439 -0.463633,1.03772 -1.061077,1.32123 -0.951378,0.45146 -1.336195,0.26279 -1.958376,-0.96015 -0.375444,-0.73794 -0.439702,-1.24974 -0.389974,-3.10621 0.05575,-2.08245 0.254677,-2.87151 1.117422,-4.43297 0.04188,-0.0758 -0.306953,-0.20133 -0.775163,-0.27899 -0.763207,-0.1266 -2.411893,0.13502 -4.762691,0.75573 -0.894235,0.23612 -1.595096,-0.0467 -1.595096,-0.64354 0,-0.61557 1.525082,-2.25874 2.952964,-3.18162 0.705376,-0.45591 2.005521,-1.06141 2.889213,-1.34555 1.414513,-0.45483 1.592649,-0.57314 1.489087,-0.989 -0.690637,-2.7734 -0.465473,-3.6807 1.359762,-5.47917 2.282705,-2.24926 3.530352,-2.61647 9.780682,-2.87876 2.74569,-0.11522 3.36081,-0.20482 3.65761,-0.53279 0.33329,-0.36828 0.22684,-0.47736 -1.61513,-1.65525 -4.63857,-2.96618 -12.825437,-10.13264 -16.300346,-14.268668 -3.286521,-3.91179 -4.861204,-6.1746 -6.834001,-9.820409 -2.984699,-5.51582 -5.259735,-11.383054 -6.405483,-16.519439 -0.469413,-2.104378 -0.52509,-2.907505 -0.514181,-7.416896 0.01081,-4.466207 0.08272,-5.450806 0.615676,-8.42829 0.331889,-1.854215 0.802919,-4.518401 1.046736,-5.920395 0.243818,-1.401994 0.497834,-2.720894 0.564486,-2.930892 0.129867,-0.409164 -1.699023,-3.782161 -2.878205,-5.308239 -2.208904,-2.858738 -4.042121,-4.581717 -8.126345,-7.637663 -4.522808,-3.38411 -5.085134,-3.669335 -9.327306,-4.730892 -3.328602,-0.83295 -10.084228,-3.292821 -13.822394,-5.033031 -0.494458,-0.230176 -2.11269,-0.947018 -3.596069,-1.592957 -2.989341,-1.301731 -3.43625,-1.624637 -4.174501,-3.016261 -0.794576,-1.497789 -0.645647,-1.607515 2.411919,-1.777058 1.46388,-0.08122 4.279831,-0.247018 6.257669,-0.368564 1.977839,-0.121538 6.933672,-0.380919 11.012963,-0.576414 4.079292,-0.195486 8.416022,-0.42665 9.637178,-0.513697 2.422023,-0.172634 2.208402,-0.0485 3.487789,-2.027384 1.320463,-2.042458 6.392089,-5.629061 9.897015,-6.9990756 8.720459,-3.408684 19.61405,-3.141035 27.21357,0.66861 4.39644,2.2039336 8.16673,6.2634246 10.962352,11.8032176 1.59787,3.166352 1.79328,4.048314 2.06654,9.327302 0.23726,4.583367 0.61544,7.315256 1.17502,8.488008 0.21171,0.443682 1.01138,0.992521 2.87619,1.974021 6.81694,3.587916 11.35525,6.926567 16.76301,12.33187 5.87543,5.872761 9.82796,11.243129 14.46223,19.650018 1.58482,2.875008 2.39904,4.707496 3.61045,8.125815 0.45998,1.297951 1.23688,3.270166 1.72645,4.382706 0.48957,1.11253 0.90114,2.22507 0.91461,2.4723 0.0582,1.06732 7.7553,16.448517 9.83518,19.653617 0.80193,1.23577 1.45805,2.33233 1.45805,2.4368 0,0.30895 3.53625,6.28645 5.00537,8.46084 1.48041,2.19107 4.10716,5.65676 4.4463,5.86636 0.11703,0.0723 0.21277,0.28493 0.21277,0.47245 0,0.18752 0.97434,1.47108 2.1652,2.85236 1.19085,1.38126 2.86865,3.42166 3.72843,4.53419 0.85978,1.11253 2.40104,2.98361 3.42503,4.15795 1.02399,1.17435 2.36363,2.79258 2.97696,3.59608 6.77953,8.88143 7.02174,9.33522 6.28513,11.77536 -0.422,1.39795 -0.71306,1.44448 -2.98362,0.47692 -1.09972,-0.46862 -2.45462,-1.10761 -3.01088,-1.41998 -1.89196,-1.0624 -8.19725,-4.82458 -9.8892,-5.90059 -0.92711,-0.5896 -2.51698,-1.52737 -3.53303,-2.08393 -1.75596,-0.96184 -2.872,-1.65054 -7.07446,-4.36559 -1.00512,-0.64937 -1.86772,-1.14045 -1.91686,-1.09129 -0.10716,0.10715 1.5807,4.32776 3.64993,9.12697 0.82612,1.91603 1.68642,4.03996 1.91176,4.71984 0.75058,2.26447 1.58597,4.33228 2.12563,5.26152 0.65648,1.13039 2.12197,4.9583 3.28058,8.56901 0.47743,1.48786 1.17596,3.45186 1.55229,4.36447 1.28217,3.10932 2.1084,6.64831 1.90439,8.1572 -0.0793,0.58703 -0.23597,1.12398 -0.34801,1.19323 -0.11203,0.0693 -0.2037,0.33157 -0.2037,0.58295 0,0.25139 -0.26259,1.19679 -0.58356,2.10088 -0.57159,1.61011 -0.57851,1.69931 -0.33679,4.34817 0.13574,1.48739 0.33498,2.93809 0.44276,3.22377 0.24556,0.65081 0.78444,3.74625 0.75089,4.31323 -0.0286,0.48448 -0.89738,1.48792 -1.28816,1.48792 -0.14424,0 -1.11272,-0.60503 -2.15218,-1.3445 z"
       id="path49"
       style="fill:#dddddd;fill-opacity:1"
       transform="matrix(0.91070649,0,0,0.91070649,6.8690382,7.9536569)" /><path
       style="display:inline;fill:#000000;stroke-width:0.637099"
       d="m 185.10462,203.12905 c -1.03946,-0.73948 -2.45581,-1.744 -3.14743,-2.23227 -1.95943,-1.3833 -3.75956,-3.12663 -4.4023,-4.26337 -1.2142,-2.1474 -2.38097,-3.84709 -2.64088,-3.84709 -0.14801,0 -0.42712,0.33137 -0.62026,0.73638 -0.19313,0.40501 -0.7063,0.92765 -1.14038,1.16141 -0.69501,0.37428 -0.87518,0.38941 -1.50942,0.1267 -1.58957,-0.65842 -4.06959,-3.67216 -4.85598,-5.90102 -0.421,-1.19325 -0.72382,-1.51596 -2.78251,-2.96534 -0.93111,-0.65553 -2.57246,-2.01794 -3.64744,-3.02758 -2.17463,-2.04244 -2.67603,-2.89549 -3.81328,-6.48759 -0.3805,-1.20186 -0.94201,-2.77532 -1.24779,-3.49658 -0.3058,-0.72127 -0.64848,-1.63152 -0.76152,-2.02279 -0.27094,-0.93778 -1.12263,-6.31732 -1.92012,-12.12792 l -0.64147,-4.6739 -0.89901,-0.53051 c -1.09268,-0.64479 -11.42853,-11.05654 -12.4227,-12.51391 -0.8041,-1.17873 -1.05757,-1.31937 -2.3778,-1.31937 -1.31042,0 -4.04751,-0.79605 -5.62133,-1.63489 -0.78274,-0.4172 -1.7787,-1.22412 -2.44456,-1.98058 -1.66924,-1.89635 -2.52391,-2.30412 -4.51409,-2.15369 -2.50864,0.18963 -3.55032,0.46467 -4.67962,1.23562 -0.57419,0.39199 -1.20035,0.71271 -1.39145,0.71271 -0.67059,0 -0.6217,0.4636 0.1431,1.3571 1.1674,1.36384 2.03237,4.33723 1.59403,5.47952 -0.30544,0.79596 -1.91985,0.11813 -4.47111,-1.87726 -1.10358,-0.86311 -1.44486,-1.00777 -2.54752,-1.07974 -0.70028,-0.0457 -1.82951,-0.0191 -2.50938,0.0591 -1.13838,0.13098 -1.33426,0.24442 -2.47654,1.43435 -0.68222,0.71067 -1.59247,1.94166 -2.02279,2.73554 -0.65359,1.20579 -0.8009,1.73945 -0.89478,3.24146 -0.0992,1.58655 -0.16525,1.80441 -0.56188,1.85227 -1.39171,0.16788 -3.00081,-3.13445 -3.03805,-6.23498 l -0.0149,-1.23614 -0.80596,0.89901 c -1.158953,1.29277 -2.231424,3.01723 -2.561373,4.11851 -0.220033,0.73439 -0.463633,1.03772 -1.061077,1.32123 -0.951378,0.45146 -1.336195,0.26279 -1.958376,-0.96015 -0.375444,-0.73794 -0.439702,-1.24974 -0.389974,-3.10621 0.05575,-2.08245 0.254677,-2.87151 1.117422,-4.43297 0.04188,-0.0758 -0.306953,-0.20133 -0.775163,-0.27899 -0.763207,-0.1266 -2.411893,0.13502 -4.762691,0.75573 -0.894235,0.23612 -1.595096,-0.0467 -1.595096,-0.64354 0,-0.61557 1.525082,-2.25874 2.952964,-3.18162 0.705376,-0.45591 2.005521,-1.06141 2.889213,-1.34555 1.414513,-0.45483 1.592649,-0.57314 1.489087,-0.989 -0.690637,-2.7734 -0.465473,-3.6807 1.359762,-5.47917 2.282705,-2.24926 3.530352,-2.61647 9.780682,-2.87876 2.74569,-0.11522 3.36081,-0.20482 3.65761,-0.53279 0.33329,-0.36828 0.22684,-0.47736 -1.61513,-1.65525 -4.63857,-2.96618 -12.825437,-10.13264 -16.300346,-14.26867 -3.286521,-3.91179 -4.861204,-6.1746 -6.834001,-9.820409 -2.984699,-5.51582 -5.259735,-11.383054 -6.405483,-16.519439 -0.469413,-2.104378 -0.52509,-2.907505 -0.514181,-7.416896 0.01081,-4.466207 0.08272,-5.450806 0.615676,-8.42829 0.331889,-1.854215 0.802919,-4.518401 1.046736,-5.920395 0.243818,-1.401994 0.497834,-2.720894 0.564486,-2.930892 0.129867,-0.409164 -1.699023,-3.782161 -2.878205,-5.308239 -2.208904,-2.858738 -4.042121,-4.581717 -8.126345,-7.637663 -4.522808,-3.38411 -5.085134,-3.669335 -9.327306,-4.730892 -3.328602,-0.83295 -10.084228,-3.292821 -13.822394,-5.033031 -0.494458,-0.230176 -2.11269,-0.947018 -3.596069,-1.592957 -2.989341,-1.301731 -3.43625,-1.624637 -4.174501,-3.016261 -0.794576,-1.497789 -0.645647,-1.607515 2.411919,-1.777058 1.46388,-0.08122 4.279831,-0.247018 6.257669,-0.368564 1.977839,-0.121538 6.933672,-0.380919 11.012963,-0.576414 4.079292,-0.195486 8.416022,-0.42665 9.637178,-0.513697 2.422023,-0.172634 2.208402,-0.0485 3.487789,-2.027384 1.320463,-2.042458 6.392089,-5.629061 9.897015,-6.999076 8.720459,-3.408684 19.61405,-3.141035 27.21357,0.66861 4.39644,2.203934 8.16673,6.263425 10.96235,11.803218 1.59787,3.166352 1.79328,4.048314 2.06654,9.327302 0.23726,4.583367 0.61544,7.315256 1.17502,8.488008 0.21171,0.443682 1.01138,0.992521 2.87619,1.974021 6.81694,3.587916 11.35525,6.926567 16.76301,12.33187 5.87543,5.872761 9.82796,11.243129 14.46223,19.650018 1.58482,2.875008 2.39904,4.707496 3.61045,8.125815 0.45998,1.297951 1.23688,3.270166 1.72645,4.382706 0.48957,1.11253 0.90114,2.22507 0.91461,2.4723 0.0582,1.06732 7.7553,16.448519 9.83518,19.653619 0.80193,1.23577 1.45805,2.33233 1.45805,2.4368 0,0.30895 3.53625,6.28645 5.00537,8.46084 1.48041,2.19107 4.10716,5.65676 4.4463,5.86636 0.11703,0.0723 0.21277,0.28493 0.21277,0.47245 0,0.18752 0.97434,1.47108 2.1652,2.85236 1.19085,1.38126 2.86865,3.42166 3.72843,4.53419 0.85978,1.11253 2.40104,2.98361 3.42503,4.15795 1.02399,1.17435 2.36363,2.79258 2.97696,3.59608 6.77953,8.88143 7.02174,9.33522 6.28513,11.77536 -0.422,1.39795 -0.71306,1.44448 -2.98362,0.47692 -1.09972,-0.46862 -2.45462,-1.10761 -3.01088,-1.41998 -1.89196,-1.0624 -8.19725,-4.82458 -9.8892,-5.90059 -0.92711,-0.5896 -2.51698,-1.52737 -3.53303,-2.08393 -1.75596,-0.96184 -2.872,-1.65054 -7.07446,-4.36559 -1.00512,-0.64937 -1.86772,-1.14045 -1.91686,-1.09129 -0.10716,0.10715 1.5807,4.32776 3.64993,9.12697 0.82612,1.91603 1.68642,4.03996 1.91176,4.71984 0.75058,2.26447 1.58597,4.33228 2.12563,5.26152 0.65648,1.13039 2.12197,4.9583 3.28058,8.56901 0.47743,1.48786 1.17596,3.45186 1.55229,4.36447 1.28217,3.10932 2.1084,6.64831 1.90439,8.1572 -0.0793,0.58703 -0.23597,1.12398 -0.34801,1.19323 -0.11203,0.0693 -0.2037,0.33157 -0.2037,0.58295 0,0.25139 -0.26259,1.19679 -0.58356,2.10088 -0.57159,1.61011 -0.57851,1.69931 -0.33679,4.34817 0.13574,1.48739 0.33498,2.93809 0.44276,3.22377 0.24556,0.65081 0.78444,3.74625 0.75089,4.31323 -0.0286,0.48448 -0.89738,1.48792 -1.28816,1.48792 -0.14424,0 -1.11272,-0.60503 -2.15218,-1.3445 z m -1.07317,-4.51983 c -0.77447,-1.72097 -2.70427,-7.07936 -4.28257,-11.89127 -0.62846,-1.91603 -1.35469,-4.09053 -1.61385,-4.83222 -0.25916,-0.74169 -1.56887,-4.58499 -2.91045,-8.54066 -7.4113,-21.85228 -8.42577,-24.51121 -9.54656,-25.02187 -0.31746,-0.14465 -0.6111,-0.263 -0.65254,-0.263 -0.0414,0 0.15853,0.78383 0.44434,1.74185 0.28583,0.95802 1.04262,3.51178 1.68178,5.67504 2.08817,7.06758 12.74967,38.74978 13.99209,41.57956 0.18996,0.43265 0.67155,1.0395 1.07019,1.34853 1.39121,1.07851 2.34977,1.75537 2.40752,1.7 0.032,-0.0307 -0.23347,-0.70387 -0.58995,-1.49596 z m 1.09708,-8.85708 c 0.22669,-0.28338 0.67084,-2.66258 0.67084,-3.59359 0,-0.5997 -1.21991,-4.10674 -3.47986,-10.00406 -0.30793,-0.80349 -1.52817,-4.0819 -2.71165,-7.28537 -4.66169,-12.61818 -7.83681,-19.66651 -8.54177,-18.96155 -0.18275,0.18276 0.79025,3.26689 2.71435,8.60371 1.95405,5.41993 9.63432,27.86776 10.52876,30.77341 0.27432,0.89114 0.5131,1.37104 0.55915,1.12377 0.0442,-0.23737 0.16128,-0.53271 0.26018,-0.65632 z m -11.55949,0.0321 c 0.0643,-0.16776 -0.23392,-1.40672 -0.66289,-2.75324 -0.42896,-1.34652 -1.35497,-4.36987 -2.05781,-6.71856 -0.70284,-2.34868 -1.61454,-5.38286 -2.026,-6.74263 -0.41148,-1.35976 -0.86405,-2.92742 -1.00572,-3.48369 -0.14168,-0.55626 -0.91073,-3.18589 -1.70901,-5.84362 -0.79827,-2.65771 -1.85902,-6.19759 -2.35723,-7.86639 -2.60682,-8.73189 -3.17767,-10.20464 -4.08788,-10.54641 -0.32752,-0.12298 -0.51801,-0.098 -0.55964,0.0734 -0.14968,0.61624 1.63702,7.54876 4.52381,17.55273 2.06573,7.15862 3.13779,10.91733 4.74375,16.63182 2.7119,9.64975 2.47107,8.95033 3.26978,9.49587 0.82948,0.56656 1.75162,0.6625 1.92884,0.20068 z m -9.44687,-9.25621 c -0.16855,-1.10749 -0.50793,-2.67101 -0.75416,-3.4745 -0.24623,-0.8035 -0.70612,-2.52287 -1.02195,-3.82083 -0.31586,-1.29796 -0.88505,-3.37132 -1.2649,-4.60746 -0.37984,-1.23615 -1.79118,-6.59654 -3.1363,-11.91198 -3.30681,-13.06732 -3.84814,-14.94616 -4.30629,-14.94616 -0.57327,0 -0.42156,2.3818 0.47584,7.47048 0.24551,1.3921 0.94906,5.61583 1.56346,9.38609 1.65767,10.17222 2.35695,13.4417 3.70028,17.30102 0.9067,2.6049 1.23586,3.28424 2.07375,4.28 0.64473,0.76623 2.77742,2.53624 2.90373,2.40994 0.0402,-0.0402 -0.0649,-0.97912 -0.23346,-2.0866 z m 31.6927,-24.34972 c -0.5176,-1.00092 -1.41161,-1.97453 -2.32715,-2.53436 -0.45834,-0.28024 -1.65495,-1.13361 -2.65914,-1.89636 -1.00419,-0.76274 -2.53847,-1.80303 -3.40951,-2.31174 -0.87104,-0.50871 -2.02164,-1.25526 -2.55691,-1.65897 -1.71174,-1.29108 -5.42807,-3.90226 -6.70444,-4.7107 -0.67988,-0.43063 -2.44383,-1.52928 -3.9199,-2.44143 -1.47606,-0.91217 -3.53598,-2.30126 -4.57759,-3.0869 -1.04162,-0.78562 -4.36597,-3.08667 -7.38745,-5.11343 -3.02147,-2.02676 -5.91739,-4.02428 -6.43537,-4.43895 -0.51797,-0.41467 -2.7117,-1.93095 -4.87496,-3.36954 -2.16326,-1.43858 -5.62222,-3.85717 -7.68656,-5.37465 -2.06435,-1.51748 -5.0944,-3.6158 -6.73343,-4.66293 -1.63903,-1.04713 -3.58648,-2.39056 -4.32766,-2.98538 l -1.34757,-1.08151 -0.29531,0.56362 c -0.16242,0.31 -0.5122,0.67971 -0.77729,0.82158 l -0.48198,0.25795 0.54238,0.42835 c 0.29832,0.23559 2.11005,1.50555 4.02608,2.82213 4.75861,3.26983 8.45319,5.89368 10.64024,7.5566 1.0085,0.76681 3.45186,2.4879 5.4297,3.82464 1.97784,1.33675 5.87171,3.98474 8.65304,5.88443 8.19449,5.59696 13.19543,8.91615 16.06994,10.66584 1.48338,0.90292 4.41642,2.77671 6.51788,4.16396 8.37606,5.5294 14.34484,9.2904 14.78337,9.31521 0.0959,0.005 0.0237,-0.28142 -0.16041,-0.63746 z m -44.96083,-7.38765 c -0.2877,-0.72309 -0.56109,-3.05837 -0.78278,-6.68644 -0.22817,-3.73399 -0.81064,-7.77813 -1.61508,-11.21343 -0.36453,-1.55674 -0.62769,-2.17279 -1.19049,-2.78691 l -0.72251,-0.7884 -0.88809,0.80234 c -0.91298,0.82483 -3.75347,2.54545 -6.4411,3.90171 -1.28251,0.64719 -1.48923,0.82956 -1.31321,1.15847 0.11489,0.2147 0.41181,0.96765 0.6598,1.67323 0.86636,2.46493 2.4603,4.76192 5.31555,7.66009 2.40041,2.43649 6.84017,6.62856 7.05417,6.66064 0.0442,0.006 0.01,-0.16497 -0.0762,-0.3813 z m 36.1846,-2.53353 c 0.0781,-0.12639 -0.0182,-0.70795 -0.21415,-1.29235 -0.30016,-0.89544 -0.60629,-1.24577 -1.94673,-2.22778 -0.8748,-0.64089 -1.71907,-1.11594 -1.87616,-1.05566 -0.15708,0.0603 -0.42468,0.36947 -0.59466,0.68709 -0.34889,0.6519 -0.24749,0.76413 2.71817,3.00856 1.55466,1.17657 1.69144,1.23949 1.91353,0.88014 z m -88.819526,-5.05035 c 1.079151,-1.37094 1.585515,-1.80193 2.919556,-2.48501 4.68622,-2.39951 4.79526,-2.43866 5.17082,-1.85617 0.20482,0.31768 0.006,0.59966 -1.20634,1.71391 -0.88728,0.81525 -1.69176,1.81193 -2.06958,2.56403 -0.61891,1.23201 -0.81542,2.7226 -0.39332,2.98347 0.12488,0.0771 0.22574,-0.0917 0.22695,-0.38006 0.006,-1.54115 2.77585,-5.13305 5.20978,-6.75725 l 1.169,-0.78008 1.13604,0.52899 c 0.62482,0.29095 1.26842,0.52999 1.43024,0.5312 0.16182,9e-4 0.2317,0.10333 0.1553,0.22695 -0.0799,0.1293 0.12921,0.22568 0.49244,0.22694 0.85452,0.004 2.86963,0.96777 4.06197,1.94479 0.53719,0.44019 1.01377,0.76329 1.05908,0.71799 0.0453,-0.0453 -0.3613,-0.74668 -0.90356,-1.55859 -0.8779,-1.31448 -1.17146,-1.56674 -2.67936,-2.30238 -0.97186,-0.47413 -1.69343,-0.96774 -1.69343,-1.15842 0,-0.47823 0.8109,-0.93245 2.38377,-1.33525 1.15233,-0.2951 5.9252,-1.88369 6.09921,-2.03004 0.0301,-0.0253 -0.36153,-0.31852 -0.87026,-0.65159 -0.67832,-0.44412 -1.00155,-0.54203 -1.21218,-0.36721 -0.15798,0.13111 -0.92615,0.34127 -1.70706,0.46704 -1.7017,0.27405 -6.64909,1.84457 -8.0648,2.56012 -0.55627,0.28117 -1.71937,0.63511 -2.58468,0.78655 -2.02933,0.35517 -5.02655,1.6099 -6.760378,2.83012 -2.297462,1.61689 -4.303744,5.17358 -3.997752,7.08711 l 0.14728,0.9211 0.587836,-1.38483 c 0.323314,-0.76167 1.175353,-2.13121 1.893428,-3.04343 z m 80.305436,-2.34907 0.4792,-0.88287 -0.4792,-0.42605 c -0.26356,-0.23434 -1.59174,-1.26887 -2.9515,-2.29895 -1.35976,-1.03009 -2.74975,-2.1273 -3.08887,-2.43826 l -0.61655,-0.56537 -0.50721,0.47514 c -0.27897,0.26132 -0.80162,0.58669 -1.16144,0.72305 l -0.65424,0.24791 0.76662,0.80144 c 1.97987,2.06986 6.38355,5.25216 7.26313,5.2487 0.31575,-9.1e-4 0.62871,-0.29269 0.95006,-0.88474 z m -83.609615,-0.91627 c 1.714485,0.25074 1.444217,0.39265 3.157034,-1.65772 0.481119,-0.57593 0.481645,-0.585 0.03408,-0.585 -0.736367,0 -5.193011,1.55585 -5.804523,2.0264 l -0.561893,0.43237 0.815356,-0.22097 c 0.537318,-0.14561 1.342041,-0.14393 2.359916,0.005 z m 41.784795,-1.8494 c -0.0764,-0.40175 -0.24928,-1.1603 -0.38419,-1.68566 -0.28191,-1.09777 -0.37742,-1.11997 -2.65918,-0.61806 -0.80349,0.17673 -1.86546,0.32713 -2.35992,0.33422 l -0.89902,0.0129 0.56189,0.45727 c 0.72376,0.589 2.23169,1.27461 3.9332,1.7883 1.9149,0.57811 1.97042,0.56924 1.80722,-0.28898 z m -37.333163,-2.33887 c 1.637963,-0.44729 1.833863,-0.58209 1.997783,-1.37462 0.0697,-0.33716 0.58591,-1.30813 1.14707,-2.15769 1.39345,-2.10959 1.16871,-2.3652 -1.22456,-1.39273 -1.25225,0.50884 -2.545447,1.58592 -3.256905,2.71263 -0.347226,0.54989 -0.6313,2.0612 -0.444316,2.36375 0.176776,0.28603 0.180393,0.28573 1.780928,-0.15134 z m 8.118083,-2.78799 c 1.34754,-0.37838 2.48459,-0.72249 2.52679,-0.76469 0.0422,-0.0422 -0.44928,-0.18954 -1.0922,-0.32742 -1.07766,-0.23111 -1.24183,-0.20795 -2.1029,0.29666 -0.98247,0.57577 -2.13171,1.46322 -1.91133,1.47594 0.0713,0.004 1.23211,-0.3021 2.57964,-0.68049 z m 28.1945,0.36921 c 2.39857,-0.49696 4.62183,-1.65646 6.02895,-3.14429 1.68314,-1.77966 1.63018,-2.08332 -0.76132,-4.36514 -1.05848,-1.00994 -2.02762,-1.83625 -2.15364,-1.83625 -0.57333,0 -18.48492,-12.80832 -20.75721,-14.84319 -0.49446,-0.44279 -1.77333,-1.21889 -2.84194,-1.72465 -2.11494,-1.00099 -5.30534,-3.06151 -7.60914,-4.91435 -3.50628,-2.819929 -7.838724,-7.861079 -9.738878,-11.331965 -3.181744,-5.811874 -4.12035,-9.656653 -3.925172,-16.078507 0.101414,-3.336711 0.113787,-3.404967 0.916933,-5.058203 0.876785,-1.80485 3.275244,-4.725644 4.768337,-5.806798 2.78604,-2.017386 13.6826,-7.276024 19.83458,-9.572099 0.89621,-0.334482 1.62947,-0.687718 1.62947,-0.784953 0,-0.09724 -0.24674,-0.61938 -0.54831,-1.160307 -0.77842,-1.396301 -1.42343,-3.940309 -1.75944,-6.939512 l -0.28958,-2.584671 -1.9135,1.910415 c -1.98013,1.976921 -3.30446,4.136638 -3.80704,6.208502 -0.24475,1.008956 -1.57799,2.45668 -6.17125,6.701205 -3.10708,2.871175 -3.652,3.256291 -7.387176,5.220858 -4.039657,2.1247 -5.671909,3.31143 -7.293347,5.302601 -3.548422,4.357569 -5.740491,8.812427 -7.260215,14.754631 -0.405983,1.58741 -0.866788,2.840854 -1.209645,3.290356 l -0.553834,0.726124 0.427692,1.54186 c 0.886412,3.195585 4.335841,10.416984 6.694842,14.015733 3.23382,4.9333 8.658575,10.91429 12.993753,14.32608 1.91775,1.50928 2.3905,1.90625 4.50686,3.78445 3.12768,2.77574 6.29363,5.08691 8.85034,6.46084 1.05073,0.56465 2.66897,1.43848 3.59608,1.94186 3.85761,2.09451 7.7378,3.82461 8.62208,3.84442 0.38787,0.009 0.8789,0.0847 1.09117,0.16891 0.81043,0.32154 4.36082,0.28971 6.01955,-0.0539 z m 28.72176,-1.54397 c 0.5202,-0.53005 0.94581,-1.02384 0.94581,-1.09731 0,-0.0735 -1.39066,-1.17253 -3.09037,-2.44234 -1.69971,-1.2698 -3.47304,-2.60403 -3.94075,-2.96493 l -0.85037,-0.65618 -0.83528,0.73339 c -0.45941,0.40336 -0.83529,0.7902 -0.83529,0.85964 0,0.27248 3.67771,3.58864 5.06523,4.56727 0.80803,0.5699 1.6581,1.24498 1.88905,1.50018 0.23096,0.25519 0.48432,0.46399 0.56303,0.46399 0.0787,0 0.56874,-0.43367 1.08894,-0.96371 z m 9.79011,-0.29068 c 0.72532,-0.27834 -4.72091,-4.83784 -6.15493,-5.1528 -0.6707,-0.14731 -1.56559,0.18875 -1.56559,0.58792 0,0.12832 0.42512,0.60518 0.94471,1.05968 0.5196,0.45452 1.62813,1.45851 2.4634,2.2311 1.47686,1.36602 1.55247,1.40472 2.74535,1.40472 0.67467,0 1.37984,-0.0588 1.56706,-0.13062 z m -10.38371,-7.70057 c 0.65356,-0.58396 0.68755,-0.67854 0.39436,-1.09714 -0.17648,-0.25195 -1.24667,-1.22437 -2.37823,-2.16094 -1.13155,-0.93657 -2.12251,-1.80823 -2.20212,-1.93705 -0.38869,-0.6289 -3.04002,0.0888 -3.04002,0.823 0,0.40055 3.13988,3.467 4.41457,4.3113 1.30768,0.86618 1.89585,0.87891 2.81144,0.0608 z m -12.17602,-1.12276 c 0.73436,-0.61306 0.75271,-0.66584 0.46951,-1.34955 -0.1621,-0.39135 -0.63859,-1.01346 -1.05888,-1.38248 -0.82289,-0.72251 -4.60132,-3.3107 -5.12856,-3.51303 -0.3301,-0.12667 -1.91828,0.99382 -1.91829,1.35339 -2e-5,0.34135 3.87384,4.17016 4.92693,4.86963 1.24048,0.82396 1.74383,0.82805 2.70929,0.022 z m 11.1495,-7.33828 0.88028,-0.78417 -1.36027,-1.29481 c -0.74815,-0.71215 -2.06296,-1.68857 -2.92181,-2.16982 -0.85885,-0.48124 -1.9317,-1.08552 -2.38411,-1.34285 -0.66102,-0.37596 -0.94753,-0.4239 -1.45872,-0.24412 -1.33495,0.46947 -0.79131,1.51141 2.02976,3.89022 3.68327,3.10584 3.84475,3.16609 5.21487,1.94555 z m -11.97472,-0.1099 c 0.58046,-0.36812 1.05358,-0.7474 1.05135,-0.84283 -0.005,-0.22424 -1.09511,-1.12359 -4.15391,-3.4278 -1.35977,-1.02432 -2.50601,-1.95009 -2.54722,-2.0573 -0.0974,-0.25343 -0.71172,-0.25405 -0.71172,-6.4e-4 0,0.1068 -0.39997,0.47136 -0.8888,0.81013 -0.84367,0.58466 -0.87195,0.6417 -0.55668,1.12286 0.59302,0.90506 5.12161,4.50536 6.16532,4.90152 0.52809,0.20045 0.52779,0.20054 1.64166,-0.50586 z m -11.86626,-1.80462 c 1.08852,-1.02259 0.43742,-2.86649 -1.51041,-4.27749 -1.19629,-0.86659 -2.34136,-0.89555 -3.30629,-0.0836 -1.21825,1.02509 -0.87802,2.63374 0.89604,4.2365 0.89182,0.80572 1.00723,0.84601 2.15144,0.75111 0.86391,-0.0716 1.36898,-0.25048 1.76922,-0.6265 z m -14.07094,-7.47477 c 0.58996,-0.30342 1.0933,-0.96699 0.88868,-1.17159 -0.0709,-0.0709 -1.02701,-0.28566 -2.12473,-0.47726 -4.59366,-0.80181 -11.42728,-4.509789 -15.28336,-8.292889 -2.5857,-2.536743 -5.84861,-7.312931 -7.3205,-10.715605 -0.76831,-1.776169 -1.155078,-2.980094 -3.088807,-9.614929 -0.571084,-1.959445 -0.631037,-2.066751 -0.769063,-1.376622 -0.08231,0.411666 -0.146519,1.671374 -0.14263,2.799365 0.03444,9.996519 6.40021,19.986761 16.67618,26.17105 2.0175,1.21416 3.04582,1.69282 4.7808,2.22532 2.28797,0.70221 5.46117,0.92748 6.38343,0.45316 z m 36.56753,-2.321 c 0.44206,-0.11867 0.3389,-0.38897 -1.60718,-4.211069 -1.14377,-2.24634 -2.2529,-4.6911 -2.46475,-5.432798 -0.622,-2.177593 -0.65284,-2.221529 -1.85385,-2.641172 -2.02211,-0.706535 -3.85348,-2.188741 -9.44857,-7.647126 -5.47955,-5.345667 -9.16431,-8.591298 -11.95617,-10.531308 -7.41938,-5.155566 -14.58528,-7.606409 -24.27348,-8.301895 -3.33529,-0.239421 -5.61887,-0.09469 -5.61887,0.356128 0,0.427629 0.77136,0.84535 3.4837,1.886584 4.47311,1.717178 8.62949,4.198885 10.37592,6.195323 0.5436,0.62141 2.37584,3.066135 4.07164,5.432714 3.97301,5.544524 6.14414,8.154387 9.47193,11.385886 4.84542,4.705214 10.2357,8.343044 15.79757,10.661544 5.33375,2.223409 7.47788,2.721109 12.65071,2.936559 0.49445,0.0206 1.11159,-0.0196 1.3714,-0.0894 z M 82.945674,79.118772 c 0.313352,-8.586458 1.741334,-12.277456 6.971745,-18.020404 1.759264,-1.931653 2.178762,-2.533348 2.395178,-3.43546 0.43604,-1.817631 -0.218102,-4.460171 -1.426741,-5.763624 -1.106327,-1.19312 -7.27635,-5.308113 -10.840672,-7.230013 -0.885406,-0.477411 -2.409092,-1.070304 -3.385964,-1.31753 -1.578021,-0.399366 -5.497163,-1.148233 -6.019112,-1.150136 -0.108571,-3.9e-4 0.548836,0.489458 1.460903,1.08856 4.249029,2.791008 8.734873,7.687872 10.690157,11.669652 0.559419,1.139213 0.629986,1.522199 0.610135,3.311004 -0.01233,1.112536 -0.240918,3.084762 -0.507923,4.382714 -1.562155,7.593827 -1.769878,13.90697 -0.657043,19.969288 0.376731,2.052303 0.535116,1.269861 0.709337,-3.504051 z M 104.53874,45.903001 c 2.6306,-0.685189 7.1613,-3.372317 11.36202,-6.73876 3.39014,-2.716833 3.30743,-2.273296 0.74508,-3.995522 -3.79422,-2.55019 -7.48779,-3.918274 -11.9828,-4.43837 -2.9692,-0.343555 -3.71828,-0.575499 -5.033611,-1.558566 -1.500462,-1.121438 -4.080946,-2.399973 -5.689566,-2.818963 -1.668555,-0.434609 -4.923532,-0.427103 -6.630765,0.01532 -1.691996,0.438434 -2.760243,1.107696 -3.982904,2.495286 -1.132705,1.285506 -1.430602,1.836576 -1.792232,3.315356 -0.229314,0.937708 -0.874782,2.258611 -0.940564,1.9248 -0.01151,-0.05838 -0.05339,-1.522154 -0.09313,-3.252755 -0.0814,-3.548432 -0.477538,-5.026414 -1.708804,-6.375979 -0.879093,-0.963552 -1.076335,-0.882533 -3.802888,1.56211 -1.511204,1.354958 -2.003678,1.928055 -1.889977,2.199383 0.08457,0.201813 0.662149,1.833458 1.283503,3.62588 0.621355,1.792413 1.291686,3.450861 1.489624,3.685433 0.19794,0.234581 1.110871,0.771084 2.028739,1.192231 0.917867,0.421157 2.434956,1.303835 3.371313,1.961512 2.875707,2.019843 11.141244,6.208566 13.744761,6.965428 2.879024,0.836956 6.838661,0.935179 9.522201,0.236204 z M 85.896054,36.84632 c -0.494461,-0.233584 -1.191679,-0.717322 -1.549374,-1.074954 -0.750009,-0.749873 -1.704152,-2.658122 -1.70737,-3.41464 -0.0045,-1.154314 1.357932,-2.755112 3.079224,-3.616868 3.647136,-1.825925 8.311983,1.756082 6.616081,5.080311 -1.325082,2.597371 -4.343347,4.015981 -6.438561,3.026151 z m 3.017866,-4.227801 c 0.256209,-0.325707 0.465827,-0.773495 0.465827,-0.995077 0,-0.501442 -1.027094,-1.334536 -1.645295,-1.334536 -0.650019,0 -1.501269,0.872407 -1.501269,1.538578 0,1.377511 1.801314,1.909047 2.680737,0.791035 z m -14.111201,6.323432 c 0.08274,-0.494461 0.0841,-0.961176 0.0031,-1.037155 -0.08111,-0.07596 -2.726498,-0.513135 -5.878677,-0.971465 C 65.774962,36.475 61.79695,35.896411 60.087116,35.64758 58.377282,35.39875 55.49864,34.849801 53.690135,34.427693 51.881629,34.005584 50.2464,33.660606 50.056293,33.661059 c -0.368336,8.98e-4 0.951349,0.877928 1.547579,1.028481 0.194874,0.04922 1.36571,0.447661 2.601859,0.885433 3.197568,1.132415 9.608811,2.93334 11.462472,3.219815 0.865305,0.133729 2.989233,0.41066 4.719842,0.615392 1.730609,0.204722 3.192969,0.414956 3.249689,0.467177 0.05673,0.05221 0.308208,0.06536 0.558861,0.02928 0.339363,-0.04895 0.494143,-0.295223 0.606166,-0.964685 z M 71.962355,34.03053 c -0.190532,-0.290781 -0.673276,-0.68469 -1.072764,-0.875354 -0.399489,-0.190654 -1.020115,-0.48372 -1.379172,-0.65125 -0.361145,-0.16851 -0.788544,-0.629215 -0.956577,-1.031119 -0.199546,-0.477284 -0.513565,-0.779179 -0.915367,-0.880022 -0.584704,-0.146755 -15.747773,0.23556 -20.786086,0.524094 -4.510866,0.258321 -2.103157,0.842803 5.390598,1.308593 2.897406,0.180094 7.052804,0.576858 9.234216,0.881708 2.181412,0.304849 5.229517,0.668201 6.773567,0.807451 1.544051,0.139249 2.850436,0.296256 2.903077,0.348894 0.05265,0.05267 0.334038,0.09571 0.625322,0.09571 0.504392,0 0.513114,-0.0252 0.183186,-0.528707 z"
       id="path48"
       inkscape:export-filename="path1.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"
       transform="matrix(0.91070649,0,0,0.91070649,-9.9573042,-0.39105344)" /></g><g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Layer 2"
     style="display:none"><text
       xml:space="preserve"
       transform="matrix(0.45230195,0,0,0.45230195,-7.2804132,-113.97724)"
       id="text70"
       style="font-size:85.3333px;text-align:start;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect70);fill:#dddddd;fill-opacity:1;fill-rule:evenodd;stroke-width:1.43622;stroke-dasharray:none"><tspan
         x="37.310547"
         y="625.77208"
         id="tspan10"><tspan
           style="font-family:Honk;-inkscape-font-specification:Honk"
           id="tspan9">Specht</tspan></tspan></text><text
       xml:space="preserve"
       transform="matrix(0.40911367,0,0,0.40911367,-5.7381044,-65.80294)"
       id="text70-3"
       style="font-size:85.3333px;text-align:start;writing-mode:lr-tb;direction:ltr;white-space:pre;shape-inside:url(#rect70-4);fill:#dddddd;fill-opacity:1;fill-rule:evenodd;stroke-width:1.43622;stroke-dasharray:none"><tspan
         x="37.310547"
         y="625.77208"
         id="tspan12"><tspan
           style="font-family:Honk;-inkscape-font-specification:Honk"
           id="tspan11">Labs</tspan></tspan></text></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><g
     inkscape:groupmode="layer"
     id="layer3"
     inkscape:label="Layer 3"
     style="display:none"><text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:25.3192px;font-family:'Major Mono Display';-inkscape-font-specification:'Major Mono Display';text-align:start;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#dddddd;fill-rule:evenodd;stroke-width:0.426139"
       x="47.267357"
       y="187.98036"
       id="text1"><tspan
         sodipodi:role="line"
         id="tspan1"
         style="stroke-width:0.426139"
         x="47.267357"
         y="187.98036">Labs</tspan></text><text
       xml:space="preserve"
       style="font-size:24.465px;font-family:Honk;-inkscape-font-specification:Honk;text-align:start;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#dddddd;fill-rule:evenodd;stroke-width:0.411763"
       x="13.030512"
       y="166.11687"
       id="text2"><tspan
         sodipodi:role="line"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-family:'Major Mono Display';-inkscape-font-specification:'Major Mono Display';stroke-width:0.411763"
         x="13.030512"
         y="166.11687"
         id="tspan3">Specht</tspan></text></g><g
     inkscape:groupmode="layer"
     id="layer4"
     inkscape:label="Layer 4"
     style="display:inline"
     transform="matrix(1.0741885,0,0,1.0741885,-2.9512442,-13.350366)"><text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:22.5778px;font-family:'Major Mono Display';-inkscape-font-specification:'Major Mono Display';text-align:start;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#dddddd;fill-rule:evenodd;stroke-width:0.38"
       x="18.763046"
       y="161.37839"
       id="text3"><tspan
         sodipodi:role="line"
         id="tspan2"
         style="font-style:normal;font-variant:normal;font-weight:600;font-stretch:normal;font-family:'IBM Plex Sans';-inkscape-font-specification:'IBM Plex Sans Semi-Bold';stroke-width:0.38"
         x="18.763046"
         y="161.37839">Specht</tspan></text><text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:22.5778px;font-family:'IBM Plex Sans';-inkscape-font-specification:'IBM Plex Sans';text-align:start;writing-mode:lr-tb;direction:ltr;text-anchor:start;fill:#dddddd;fill-rule:evenodd;stroke-width:0.38"
       x="17.7922"
       y="181.66774"
       id="text4"><tspan
         sodipodi:role="line"
         id="tspan4"
         style="font-style:normal;font-variant:normal;font-weight:600;font-stretch:normal;font-family:'IBM Plex Sans';-inkscape-font-specification:'IBM Plex Sans Semi-Bold';stroke-width:0.38"
         x="17.7922"
         y="181.66774">Labs</tspan></text></g></svg>
